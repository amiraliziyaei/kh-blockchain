from Crypto.PublicKey import RSA
from Crypto.Signature.pkcs1_15 import PKCS115_SigScheme
from Crypto.Hash import SHA256
import binascii
import hashlib
from hashlib import sha512

def key_gen():
    keyPair = RSA.generate(bits=1024)
    return keyPair
    
def sig(msg,keyPair_d, keyPair_n):
    # RSA sign the message
    hash = int.from_bytes(sha512(msg.encode()).digest(), byteorder='big')
    signature = pow(hash, keyPair_d, keyPair_n)
    
    return signature
def ver(msg,keyPair_e, keyPair_n , signature):
    # RSA verify signature
    hash = int.from_bytes(sha512(msg.encode()).digest(), byteorder='big')
    hashFromSignature = pow(int(signature), int(keyPair_e), int(keyPair_n))
    return hash == hashFromSignature

# print(sig("{from : 131245549234998411433549249498765365756525723273616828178426325418246846747949206629953656092940682656076519844097394443611369353962827560836210498592670432565650120644651923813152129452426525755794152442666943735541129175404209585908117594161175539604071492859947450486798004476079465137989522673826429858499 ,to = 123780200224713691273337749018347686220071275787969055153324153799739948296558672490908399672652160236599476535516039482556154276212085438128319255987035221925969907274600733728990996196854219783614693892300252278895798243117456813403442532756673101171258079451517165313555164216566297140155899785687104557803 ,amount = 1}", 15753591300442727063216429973633790831495332440177407859157280450778015776473479621504347706717089279552404647048112568330391031370807070926622364270247978661422033249139791920564731065263104299094073491051605934624266613399361637618577277554534659169756233356202417951707715959700144722074187582348871840673, 131245549234998411433549249498765365756525723273616828178426325418246846747949206629953656092940682656076519844097394443611369353962827560836210498592670432565650120644651923813152129452426525755794152442666943735541129175404209585908117594161175539604071492859947450486798004476079465137989522673826429858499))